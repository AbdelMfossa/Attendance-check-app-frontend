{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/roosvelt/Livrable front-end/Attendance-check-app-frontend/pages/essai.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\n\nclass Essai extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      users: [],\n      isLoading: true,\n      errors: null\n    });\n  }\n\n  getUsers() {\n    axios.get(\"https://randomuser.me/api/?uresults=5\").then(response => response.data.results.map(user => ({\n      name: `${user.name.first} ${user.name.last}`,\n      username: `${user.login.username}`,\n      email: `${user.email}`,\n      images: `${user.picture.thumbail}`\n    }))).then(users => {\n      this.setState({\n        users,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(Layout, {\n      title: \"essai\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getUsers,\n        children: \" Affiche moi xa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/roosvelt/Livrable front-end/Attendance-check-app-frontend/pages/essai.js"],"names":["React","ReactDOM","axios","Layout","Essai","Component","users","isLoading","errors","getUsers","get","then","response","data","results","map","user","name","first","last","username","login","email","images","picture","thumbail","setState","catch","error","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAIA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCACxB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADwB;AAAA;;AAMhCC,EAAAA,QAAQ,GAAG;AACPP,IAAAA,KAAK,CAACQ,GAAN,CAAU,uCAAV,EACKC,IADL,CACUC,QAAQ,IACVA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,IAAI,KAAK;AAC/BC,MAAAA,IAAI,EAAG,GAAED,IAAI,CAACC,IAAL,CAAUC,KAAM,IAAGF,IAAI,CAACC,IAAL,CAAUE,IAAK,EADZ;AAE/BC,MAAAA,QAAQ,EAAG,GAAEJ,IAAI,CAACK,KAAL,CAAWD,QAAS,EAFF;AAG/BE,MAAAA,KAAK,EAAG,GAAEN,IAAI,CAACM,KAAM,EAHU;AAI/BC,MAAAA,MAAM,EAAG,GAAEP,IAAI,CAACQ,OAAL,CAAaC,QAAS;AAJF,KAAL,CAA9B,CAFR,EAQKd,IARL,CAQUL,KAAK,IAAI;AACX,WAAKoB,QAAL,CAAc;AACVpB,QAAAA,KADU;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KAbL,EAcKoB,KAdL,CAcWC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,KAAF;AAASrB,MAAAA,SAAS,EAAE;AAApB,KAAd,CAdpB;AAeH;;AAGDsB,EAAAA,MAAM,GAAG;AAEL;;AACA;AACI,YAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKpB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAlC+B","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\"\nimport Layout from \"../components/Layout\";\n\n\n\nclass Essai extends React.Component {\n    state = {\n        users: [],\n        isLoading: true,\n        errors: null\n    };\n    getUsers() {\n        axios.get(\"https://randomuser.me/api/?uresults=5\")\n            .then(response =>\n                response.data.results.map(user => ({\n                    name: `${user.name.first} ${user.name.last}`,\n                    username: `${user.login.username}`,\n                    email: `${user.email}`,\n                    images: `${user.picture.thumbail}`\n                })))\n            .then(users => {\n                this.setState({\n                    users,\n                    isLoading: false\n                });\n            })\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n\n    render() {\n\n        return\n        (\n            <Layout title=\"essai\">\n                <button onClick={this.getUsers}> Affiche moi xa</button>\n            </Layout>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}