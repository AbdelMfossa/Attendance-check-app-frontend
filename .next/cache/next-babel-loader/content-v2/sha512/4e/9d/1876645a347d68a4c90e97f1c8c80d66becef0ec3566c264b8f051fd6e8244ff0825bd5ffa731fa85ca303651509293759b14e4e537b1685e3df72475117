{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dilane/Bureau/Attendance-check-app-frontend/components/customModalC.jsx\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Dropdown } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\n\nfunction customModalC(props) {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleDelete = survid => {\n    if (props.titre == 'users') {\n      axios.delete(`users/users/${survid}`).then(res => {\n        if (res.data != null) {\n          toast.success(\"Controleur supprimmé avec succes\");\n          props.deleted(survid);\n        }\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"Erreur lors de la suppression\");\n      });\n    }\n\n    if (props.titre == 'surveillant') {\n      axios.delete(`surveillance/supervisor/${survid}`).then(res => {\n        if (res.data != null) {\n          toast.success(\"surveillant supprimmé avec succes\");\n          props.deleted(survid);\n        }\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"Erreur lors de la suppression \");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: handleShow,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      className: \"modalSuppression\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"color-titre-ajout\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"colorTitre\",\n          children: \"SUPPRESSION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Etes vous certains de vouloir  le supprimer ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"No/Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            handleDelete(props.id);\n            setShow(false);\n          },\n          children: \"YES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default customModalC;","map":{"version":3,"sources":["/home/dilane/Bureau/Attendance-check-app-frontend/components/customModalC.jsx"],"names":["React","useState","Modal","Button","Dropdown","axios","toast","customModalC","props","show","setShow","handleClose","handleShow","handleDelete","survid","titre","delete","then","res","data","success","deleted","catch","err","console","log","error","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Button, Dropdown } from 'react-bootstrap';\nimport axios from \"axios\"\nimport { toast } from 'react-toastify'\n\n\nfunction customModalC(props) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const handleDelete = (survid) => {\n        if (props.titre == 'users') {\n            axios.delete(`users/users/${survid}`)\n                .then((res) => {\n                    if (res.data != null) {\n                        toast.success(\"Controleur supprimmé avec succes\");\n                        props.deleted(survid);\n                    }\n                })\n                .catch(err => { console.log(err); toast.error(\"Erreur lors de la suppression\"); })\n        }\n        if (props.titre == 'surveillant') {\n            axios.delete(`surveillance/supervisor/${survid}`)\n                .then((res) => {\n                    if (res.data != null) {\n                        toast.success(\"surveillant supprimmé avec succes\");\n\n                        props.deleted(survid);\n                    }\n                })\n                .catch(err => { console.log(err); toast.error(\"Erreur lors de la suppression \"); })\n        }\n    }\n\n    return (\n        <>\n            <Dropdown.Item onClick={handleShow}>\n                Delete\n            </Dropdown.Item>\n            <Modal show={show} onHide={handleClose} className=\"modalSuppression\">\n                <Modal.Header closeButton className=\"color-titre-ajout\">\n                    <Modal.Title className=\"colorTitre\">SUPPRESSION</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Etes vous certains de vouloir  le supprimer ?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        No/Close\n                    </Button>\n                    <Button variant=\"danger\" onClick={() => {\n                        handleDelete(props.id);\n                        setShow(false);\n                    }} >\n                        YES\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default customModalC;\n"]},"metadata":{},"sourceType":"module"}